{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../rate.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@angular/material/button\";\nexport class RateFormComponent {\n  constructor(rateService, snackBar) {\n    this.rateService = rateService;\n    this.snackBar = snackBar;\n    this.rate = {\n      businessDate: '',\n      term: '',\n      rateType: '',\n      value: 0\n    };\n    this.isSubmitting = false;\n  }\n  submitRate() {\n    this.isSubmitting = true; // Set submitting state to true while the request is in progress\n    // Call addRate from the RateService and subscribe to the observable\n    this.rateService.addRate(this.rate).subscribe(\n    // Success callback\n    () => {\n      this.snackBar.open('Rate saved successfully!', 'Close', {\n        duration: 3000 // Snackbar will stay for 3 seconds\n      });\n\n      this.isSubmitting = false; // Reset the submitting state\n      // Reset the form after successful submission\n      this.rate = {\n        businessDate: '',\n        term: '',\n        rateType: '',\n        value: 0\n      };\n    },\n    // Error callback\n    error => {\n      this.snackBar.open('Failed to save rate. Please try again.', 'Close', {\n        duration: 3000 // Snackbar will stay for 3 seconds\n      });\n\n      this.isSubmitting = false; // Reset the submitting state even if there was an error\n      console.error('Error saving rate:', error); // Log the error\n    });\n  }\n\n  static {\n    this.ɵfac = function RateFormComponent_Factory(t) {\n      return new (t || RateFormComponent)(i0.ɵɵdirectiveInject(i1.RateService), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RateFormComponent,\n      selectors: [[\"app-rate-form\"]],\n      decls: 27,\n      vars: 4,\n      consts: [[2, \"max-width\", \"400px\", 3, \"ngSubmit\"], [\"appearance\", \"fill\", 2, \"width\", \"100%\"], [\"matInput\", \"\", \"type\", \"date\", \"name\", \"businessDate\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"name\", \"term\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"rateType\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Euribor\"], [\"value\", \"Libor\"], [\"value\", \"ECB\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"value\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n      template: function RateFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Add Interest Rate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function RateFormComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.submitRate();\n          });\n          i0.ɵɵelementStart(3, \"mat-form-field\", 1)(4, \"mat-label\");\n          i0.ɵɵtext(5, \"Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function RateFormComponent_Template_input_ngModelChange_6_listener($event) {\n            return ctx.rate.businessDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"mat-form-field\", 1)(8, \"mat-label\");\n          i0.ɵɵtext(9, \"Term\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function RateFormComponent_Template_input_ngModelChange_10_listener($event) {\n            return ctx.rate.term = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"mat-form-field\", 1)(12, \"mat-label\");\n          i0.ɵɵtext(13, \"Rate Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"mat-select\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function RateFormComponent_Template_mat_select_ngModelChange_14_listener($event) {\n            return ctx.rate.rateType = $event;\n          });\n          i0.ɵɵelementStart(15, \"mat-option\", 5);\n          i0.ɵɵtext(16, \"Euribor\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"mat-option\", 6);\n          i0.ɵɵtext(18, \"Libor\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"mat-option\", 7);\n          i0.ɵɵtext(20, \"ECB\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(21, \"mat-form-field\", 1)(22, \"mat-label\");\n          i0.ɵɵtext(23, \"Value (%)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"input\", 8);\n          i0.ɵɵlistener(\"ngModelChange\", function RateFormComponent_Template_input_ngModelChange_24_listener($event) {\n            return ctx.rate.value = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"button\", 9);\n          i0.ɵɵtext(26, \"Submit\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.rate.businessDate);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.rate.term);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.rate.rateType);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngModel\", ctx.rate.value);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i4.MatInput, i5.MatFormField, i5.MatLabel, i6.MatSelect, i7.MatOption, i8.MatButton],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["RateFormComponent","constructor","rateService","snackBar","rate","businessDate","term","rateType","value","isSubmitting","submitRate","addRate","subscribe","open","duration","error","console","i0","ɵɵdirectiveInject","i1","RateService","i2","MatSnackBar","selectors","decls","vars","consts","template","RateFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RateFormComponent_Template_form_ngSubmit_2_listener","RateFormComponent_Template_input_ngModelChange_6_listener","$event","RateFormComponent_Template_input_ngModelChange_10_listener","RateFormComponent_Template_mat_select_ngModelChange_14_listener","RateFormComponent_Template_input_ngModelChange_24_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/abhishekmalhotra/interest-rate-frontend/src/app/rate-form/rate-form.component.ts","/Users/abhishekmalhotra/interest-rate-frontend/src/app/rate-form/rate-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RateService, InterestRate } from '../rate.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-rate-form',\n  templateUrl: './rate-form.component.html'\n})\nexport class RateFormComponent {\n  rate: InterestRate = {\n    businessDate: '', \n    term: '',\n    rateType: '',\n    value: 0\n  };\n  isSubmitting = false;\n\n  constructor(private rateService: RateService, private snackBar: MatSnackBar) {}\n\n  submitRate() {\n    this.isSubmitting = true;  // Set submitting state to true while the request is in progress\n\n    // Call addRate from the RateService and subscribe to the observable\n    this.rateService.addRate(this.rate).subscribe(\n      // Success callback\n      () => {\n        this.snackBar.open('Rate saved successfully!', 'Close', {\n          duration: 3000 // Snackbar will stay for 3 seconds\n        });\n        this.isSubmitting = false; // Reset the submitting state\n\n        // Reset the form after successful submission\n        this.rate = {\n          businessDate: '', \n          term: '',\n          rateType: '',\n          value: 0\n        };\n      },\n      // Error callback\n      (error) => {\n        this.snackBar.open('Failed to save rate. Please try again.', 'Close', {\n          duration: 3000 // Snackbar will stay for 3 seconds\n        });\n        this.isSubmitting = false;  // Reset the submitting state even if there was an error\n        console.error('Error saving rate:', error); // Log the error\n      }\n    );\n  }\n}\n","<h2>Add Interest Rate</h2>\n<form (ngSubmit)=\"submitRate()\" style=\"max-width: 400px;\">\n  <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\n    <mat-label>Date</mat-label>\n    <input matInput type=\"date\" [(ngModel)]=\"rate.businessDate\" name=\"businessDate\" required>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\n    <mat-label>Term</mat-label>\n    <input matInput [(ngModel)]=\"rate.term\" name=\"term\" required>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\n    <mat-label>Rate Type</mat-label>\n    <mat-select [(ngModel)]=\"rate.rateType\" name=\"rateType\" required>\n      <mat-option value=\"Euribor\">Euribor</mat-option>\n      <mat-option value=\"Libor\">Libor</mat-option>\n      <mat-option value=\"ECB\">ECB</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\n    <mat-label>Value (%)</mat-label>\n    <input matInput type=\"number\" [(ngModel)]=\"rate.value\" name=\"value\" required>\n  </mat-form-field>\n\n  <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\n  \n\n\n</form>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}